// Code generated from SwiftLexer.g4 by ANTLR 4.13.0. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SwiftLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var SwiftLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func swiftlexerLexerInit() {
	staticData := &SwiftLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'Int'", "'Float'", "'Bool'", "'String'", "'true'", "'false'", "'print'",
		"'if'", "'else'", "'while'", "'for'", "'switch'", "'case'", "'default'",
		"'in'", "'var'", "", "", "", "'!='", "'=='", "'!'", "'||'", "'&&'",
		"'='", "'>='", "'<='", "'>'", "'<'", "'*'", "'/'", "'+'", "'-'", "'('",
		"')'", "'{'", "'}'", "':'", "'['", "']'", "','", "'.'",
	}
	staticData.SymbolicNames = []string{
		"", "INT", "FLOAT", "BOOL", "STR", "TRU", "FAL", "PRINT", "IF", "ELSE",
		"WHILE", "FOR", "SWITCH", "CASE", "DEFAULT", "IN", "VAR", "NUMBER",
		"STRING", "ID", "DIF", "IG_IG", "NOT", "OR", "AND", "IG", "MAY_IG",
		"MEN_IG", "MAYOR", "MENOR", "MUL", "DIV", "ADD", "SUB", "PARIZQ", "PARDER",
		"LLAVEIZQ", "LLAVEDER", "D_PTS", "CORIZQ", "CORDER", "COMA", "PUNTO",
		"WHITESPACE", "COMMENT", "LINE_COMMENT",
	}
	staticData.RuleNames = []string{
		"INT", "FLOAT", "BOOL", "STR", "TRU", "FAL", "PRINT", "IF", "ELSE",
		"WHILE", "FOR", "SWITCH", "CASE", "DEFAULT", "IN", "VAR", "NUMBER",
		"STRING", "ID", "DIF", "IG_IG", "NOT", "OR", "AND", "IG", "MAY_IG",
		"MEN_IG", "MAYOR", "MENOR", "MUL", "DIV", "ADD", "SUB", "PARIZQ", "PARDER",
		"LLAVEIZQ", "LLAVEDER", "D_PTS", "CORIZQ", "CORDER", "COMA", "PUNTO",
		"WHITESPACE", "COMMENT", "LINE_COMMENT", "ESC_SEQ",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 45, 293, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 1, 0, 1, 0,
		1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
		1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4,
		1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6,
		1, 6, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9,
		1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11,
		1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1,
		13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15,
		1, 15, 1, 15, 1, 16, 4, 16, 179, 8, 16, 11, 16, 12, 16, 180, 1, 16, 1,
		16, 4, 16, 185, 8, 16, 11, 16, 12, 16, 186, 3, 16, 189, 8, 16, 1, 17, 1,
		17, 5, 17, 193, 8, 17, 10, 17, 12, 17, 196, 9, 17, 1, 17, 1, 17, 1, 18,
		1, 18, 5, 18, 202, 8, 18, 10, 18, 12, 18, 205, 9, 18, 1, 19, 1, 19, 1,
		19, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23,
		1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 27, 1,
		27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32,
		1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1,
		38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 4, 42, 260,
		8, 42, 11, 42, 12, 42, 261, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 43, 5,
		43, 270, 8, 43, 10, 43, 12, 43, 273, 9, 43, 1, 43, 1, 43, 1, 43, 1, 43,
		1, 43, 1, 44, 1, 44, 1, 44, 1, 44, 5, 44, 284, 8, 44, 10, 44, 12, 44, 287,
		9, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 271, 0, 46, 1, 1, 3, 2, 5,
		3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25,
		13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43,
		22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61,
		31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79,
		40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 0, 1, 0, 7, 1, 0, 48, 57,
		1, 0, 34, 34, 2, 0, 65, 90, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97,
		122, 4, 0, 9, 10, 13, 13, 32, 32, 92, 92, 2, 0, 10, 10, 13, 13, 7, 0, 32,
		33, 35, 35, 43, 43, 45, 46, 58, 58, 64, 64, 91, 93, 299, 0, 1, 1, 0, 0,
		0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0,
		0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0,
		0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1,
		0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33,
		1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0,
		41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0,
		0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0,
		0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0,
		0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1,
		0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79,
		1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0,
		87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 1, 93, 1, 0, 0, 0, 3, 97, 1, 0, 0, 0,
		5, 103, 1, 0, 0, 0, 7, 108, 1, 0, 0, 0, 9, 115, 1, 0, 0, 0, 11, 120, 1,
		0, 0, 0, 13, 126, 1, 0, 0, 0, 15, 132, 1, 0, 0, 0, 17, 135, 1, 0, 0, 0,
		19, 140, 1, 0, 0, 0, 21, 146, 1, 0, 0, 0, 23, 150, 1, 0, 0, 0, 25, 157,
		1, 0, 0, 0, 27, 162, 1, 0, 0, 0, 29, 170, 1, 0, 0, 0, 31, 173, 1, 0, 0,
		0, 33, 178, 1, 0, 0, 0, 35, 190, 1, 0, 0, 0, 37, 199, 1, 0, 0, 0, 39, 206,
		1, 0, 0, 0, 41, 209, 1, 0, 0, 0, 43, 212, 1, 0, 0, 0, 45, 214, 1, 0, 0,
		0, 47, 217, 1, 0, 0, 0, 49, 220, 1, 0, 0, 0, 51, 222, 1, 0, 0, 0, 53, 225,
		1, 0, 0, 0, 55, 228, 1, 0, 0, 0, 57, 230, 1, 0, 0, 0, 59, 232, 1, 0, 0,
		0, 61, 234, 1, 0, 0, 0, 63, 236, 1, 0, 0, 0, 65, 238, 1, 0, 0, 0, 67, 240,
		1, 0, 0, 0, 69, 242, 1, 0, 0, 0, 71, 244, 1, 0, 0, 0, 73, 246, 1, 0, 0,
		0, 75, 248, 1, 0, 0, 0, 77, 250, 1, 0, 0, 0, 79, 252, 1, 0, 0, 0, 81, 254,
		1, 0, 0, 0, 83, 256, 1, 0, 0, 0, 85, 259, 1, 0, 0, 0, 87, 265, 1, 0, 0,
		0, 89, 279, 1, 0, 0, 0, 91, 290, 1, 0, 0, 0, 93, 94, 5, 73, 0, 0, 94, 95,
		5, 110, 0, 0, 95, 96, 5, 116, 0, 0, 96, 2, 1, 0, 0, 0, 97, 98, 5, 70, 0,
		0, 98, 99, 5, 108, 0, 0, 99, 100, 5, 111, 0, 0, 100, 101, 5, 97, 0, 0,
		101, 102, 5, 116, 0, 0, 102, 4, 1, 0, 0, 0, 103, 104, 5, 66, 0, 0, 104,
		105, 5, 111, 0, 0, 105, 106, 5, 111, 0, 0, 106, 107, 5, 108, 0, 0, 107,
		6, 1, 0, 0, 0, 108, 109, 5, 83, 0, 0, 109, 110, 5, 116, 0, 0, 110, 111,
		5, 114, 0, 0, 111, 112, 5, 105, 0, 0, 112, 113, 5, 110, 0, 0, 113, 114,
		5, 103, 0, 0, 114, 8, 1, 0, 0, 0, 115, 116, 5, 116, 0, 0, 116, 117, 5,
		114, 0, 0, 117, 118, 5, 117, 0, 0, 118, 119, 5, 101, 0, 0, 119, 10, 1,
		0, 0, 0, 120, 121, 5, 102, 0, 0, 121, 122, 5, 97, 0, 0, 122, 123, 5, 108,
		0, 0, 123, 124, 5, 115, 0, 0, 124, 125, 5, 101, 0, 0, 125, 12, 1, 0, 0,
		0, 126, 127, 5, 112, 0, 0, 127, 128, 5, 114, 0, 0, 128, 129, 5, 105, 0,
		0, 129, 130, 5, 110, 0, 0, 130, 131, 5, 116, 0, 0, 131, 14, 1, 0, 0, 0,
		132, 133, 5, 105, 0, 0, 133, 134, 5, 102, 0, 0, 134, 16, 1, 0, 0, 0, 135,
		136, 5, 101, 0, 0, 136, 137, 5, 108, 0, 0, 137, 138, 5, 115, 0, 0, 138,
		139, 5, 101, 0, 0, 139, 18, 1, 0, 0, 0, 140, 141, 5, 119, 0, 0, 141, 142,
		5, 104, 0, 0, 142, 143, 5, 105, 0, 0, 143, 144, 5, 108, 0, 0, 144, 145,
		5, 101, 0, 0, 145, 20, 1, 0, 0, 0, 146, 147, 5, 102, 0, 0, 147, 148, 5,
		111, 0, 0, 148, 149, 5, 114, 0, 0, 149, 22, 1, 0, 0, 0, 150, 151, 5, 115,
		0, 0, 151, 152, 5, 119, 0, 0, 152, 153, 5, 105, 0, 0, 153, 154, 5, 116,
		0, 0, 154, 155, 5, 99, 0, 0, 155, 156, 5, 104, 0, 0, 156, 24, 1, 0, 0,
		0, 157, 158, 5, 99, 0, 0, 158, 159, 5, 97, 0, 0, 159, 160, 5, 115, 0, 0,
		160, 161, 5, 101, 0, 0, 161, 26, 1, 0, 0, 0, 162, 163, 5, 100, 0, 0, 163,
		164, 5, 101, 0, 0, 164, 165, 5, 102, 0, 0, 165, 166, 5, 97, 0, 0, 166,
		167, 5, 117, 0, 0, 167, 168, 5, 108, 0, 0, 168, 169, 5, 116, 0, 0, 169,
		28, 1, 0, 0, 0, 170, 171, 5, 105, 0, 0, 171, 172, 5, 110, 0, 0, 172, 30,
		1, 0, 0, 0, 173, 174, 5, 118, 0, 0, 174, 175, 5, 97, 0, 0, 175, 176, 5,
		114, 0, 0, 176, 32, 1, 0, 0, 0, 177, 179, 7, 0, 0, 0, 178, 177, 1, 0, 0,
		0, 179, 180, 1, 0, 0, 0, 180, 178, 1, 0, 0, 0, 180, 181, 1, 0, 0, 0, 181,
		188, 1, 0, 0, 0, 182, 184, 5, 46, 0, 0, 183, 185, 7, 0, 0, 0, 184, 183,
		1, 0, 0, 0, 185, 186, 1, 0, 0, 0, 186, 184, 1, 0, 0, 0, 186, 187, 1, 0,
		0, 0, 187, 189, 1, 0, 0, 0, 188, 182, 1, 0, 0, 0, 188, 189, 1, 0, 0, 0,
		189, 34, 1, 0, 0, 0, 190, 194, 5, 34, 0, 0, 191, 193, 8, 1, 0, 0, 192,
		191, 1, 0, 0, 0, 193, 196, 1, 0, 0, 0, 194, 192, 1, 0, 0, 0, 194, 195,
		1, 0, 0, 0, 195, 197, 1, 0, 0, 0, 196, 194, 1, 0, 0, 0, 197, 198, 5, 34,
		0, 0, 198, 36, 1, 0, 0, 0, 199, 203, 7, 2, 0, 0, 200, 202, 7, 3, 0, 0,
		201, 200, 1, 0, 0, 0, 202, 205, 1, 0, 0, 0, 203, 201, 1, 0, 0, 0, 203,
		204, 1, 0, 0, 0, 204, 38, 1, 0, 0, 0, 205, 203, 1, 0, 0, 0, 206, 207, 5,
		33, 0, 0, 207, 208, 5, 61, 0, 0, 208, 40, 1, 0, 0, 0, 209, 210, 5, 61,
		0, 0, 210, 211, 5, 61, 0, 0, 211, 42, 1, 0, 0, 0, 212, 213, 5, 33, 0, 0,
		213, 44, 1, 0, 0, 0, 214, 215, 5, 124, 0, 0, 215, 216, 5, 124, 0, 0, 216,
		46, 1, 0, 0, 0, 217, 218, 5, 38, 0, 0, 218, 219, 5, 38, 0, 0, 219, 48,
		1, 0, 0, 0, 220, 221, 5, 61, 0, 0, 221, 50, 1, 0, 0, 0, 222, 223, 5, 62,
		0, 0, 223, 224, 5, 61, 0, 0, 224, 52, 1, 0, 0, 0, 225, 226, 5, 60, 0, 0,
		226, 227, 5, 61, 0, 0, 227, 54, 1, 0, 0, 0, 228, 229, 5, 62, 0, 0, 229,
		56, 1, 0, 0, 0, 230, 231, 5, 60, 0, 0, 231, 58, 1, 0, 0, 0, 232, 233, 5,
		42, 0, 0, 233, 60, 1, 0, 0, 0, 234, 235, 5, 47, 0, 0, 235, 62, 1, 0, 0,
		0, 236, 237, 5, 43, 0, 0, 237, 64, 1, 0, 0, 0, 238, 239, 5, 45, 0, 0, 239,
		66, 1, 0, 0, 0, 240, 241, 5, 40, 0, 0, 241, 68, 1, 0, 0, 0, 242, 243, 5,
		41, 0, 0, 243, 70, 1, 0, 0, 0, 244, 245, 5, 123, 0, 0, 245, 72, 1, 0, 0,
		0, 246, 247, 5, 125, 0, 0, 247, 74, 1, 0, 0, 0, 248, 249, 5, 58, 0, 0,
		249, 76, 1, 0, 0, 0, 250, 251, 5, 91, 0, 0, 251, 78, 1, 0, 0, 0, 252, 253,
		5, 93, 0, 0, 253, 80, 1, 0, 0, 0, 254, 255, 5, 44, 0, 0, 255, 82, 1, 0,
		0, 0, 256, 257, 5, 46, 0, 0, 257, 84, 1, 0, 0, 0, 258, 260, 7, 4, 0, 0,
		259, 258, 1, 0, 0, 0, 260, 261, 1, 0, 0, 0, 261, 259, 1, 0, 0, 0, 261,
		262, 1, 0, 0, 0, 262, 263, 1, 0, 0, 0, 263, 264, 6, 42, 0, 0, 264, 86,
		1, 0, 0, 0, 265, 266, 5, 47, 0, 0, 266, 267, 5, 42, 0, 0, 267, 271, 1,
		0, 0, 0, 268, 270, 9, 0, 0, 0, 269, 268, 1, 0, 0, 0, 270, 273, 1, 0, 0,
		0, 271, 272, 1, 0, 0, 0, 271, 269, 1, 0, 0, 0, 272, 274, 1, 0, 0, 0, 273,
		271, 1, 0, 0, 0, 274, 275, 5, 42, 0, 0, 275, 276, 5, 47, 0, 0, 276, 277,
		1, 0, 0, 0, 277, 278, 6, 43, 0, 0, 278, 88, 1, 0, 0, 0, 279, 280, 5, 47,
		0, 0, 280, 281, 5, 47, 0, 0, 281, 285, 1, 0, 0, 0, 282, 284, 8, 5, 0, 0,
		283, 282, 1, 0, 0, 0, 284, 287, 1, 0, 0, 0, 285, 283, 1, 0, 0, 0, 285,
		286, 1, 0, 0, 0, 286, 288, 1, 0, 0, 0, 287, 285, 1, 0, 0, 0, 288, 289,
		6, 44, 0, 0, 289, 90, 1, 0, 0, 0, 290, 291, 5, 92, 0, 0, 291, 292, 7, 6,
		0, 0, 292, 92, 1, 0, 0, 0, 9, 0, 180, 186, 188, 194, 203, 261, 271, 285,
		1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SwiftLexerInit initializes any static state used to implement SwiftLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSwiftLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SwiftLexerInit() {
	staticData := &SwiftLexerLexerStaticData
	staticData.once.Do(swiftlexerLexerInit)
}

// NewSwiftLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSwiftLexer(input antlr.CharStream) *SwiftLexer {
	SwiftLexerInit()
	l := new(SwiftLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &SwiftLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "SwiftLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SwiftLexer tokens.
const (
	SwiftLexerINT          = 1
	SwiftLexerFLOAT        = 2
	SwiftLexerBOOL         = 3
	SwiftLexerSTR          = 4
	SwiftLexerTRU          = 5
	SwiftLexerFAL          = 6
	SwiftLexerPRINT        = 7
	SwiftLexerIF           = 8
	SwiftLexerELSE         = 9
	SwiftLexerWHILE        = 10
	SwiftLexerFOR          = 11
	SwiftLexerSWITCH       = 12
	SwiftLexerCASE         = 13
	SwiftLexerDEFAULT      = 14
	SwiftLexerIN           = 15
	SwiftLexerVAR          = 16
	SwiftLexerNUMBER       = 17
	SwiftLexerSTRING       = 18
	SwiftLexerID           = 19
	SwiftLexerDIF          = 20
	SwiftLexerIG_IG        = 21
	SwiftLexerNOT          = 22
	SwiftLexerOR           = 23
	SwiftLexerAND          = 24
	SwiftLexerIG           = 25
	SwiftLexerMAY_IG       = 26
	SwiftLexerMEN_IG       = 27
	SwiftLexerMAYOR        = 28
	SwiftLexerMENOR        = 29
	SwiftLexerMUL          = 30
	SwiftLexerDIV          = 31
	SwiftLexerADD          = 32
	SwiftLexerSUB          = 33
	SwiftLexerPARIZQ       = 34
	SwiftLexerPARDER       = 35
	SwiftLexerLLAVEIZQ     = 36
	SwiftLexerLLAVEDER     = 37
	SwiftLexerD_PTS        = 38
	SwiftLexerCORIZQ       = 39
	SwiftLexerCORDER       = 40
	SwiftLexerCOMA         = 41
	SwiftLexerPUNTO        = 42
	SwiftLexerWHITESPACE   = 43
	SwiftLexerCOMMENT      = 44
	SwiftLexerLINE_COMMENT = 45
)
