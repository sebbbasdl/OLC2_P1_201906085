// Code generated from SwiftLexer.g4 by ANTLR 4.13.0. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SwiftLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var SwiftLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func swiftlexerLexerInit() {
	staticData := &SwiftLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'Int'", "'Float'", "'Bool'", "'String'", "'true'", "'false'", "'print'",
		"'if'", "'else'", "'while'", "'for'", "'switch'", "'case'", "'default'",
		"'in'", "'var'", "'let'", "'break'", "'continue'", "'return'", "'guard'",
		"'append'", "'removeLast'", "'remove'", "'count'", "'IsEmpty'", "'func'",
		"'struct'", "", "", "", "'!='", "'=='", "'!'", "'||'", "'&&'", "'='",
		"'>='", "'<='", "'>'", "'<'", "'*'", "'/'", "'+'", "'-'", "'('", "')'",
		"'{'", "'}'", "':'", "'['", "']'", "','", "'->'", "'.'", "'%'",
	}
	staticData.SymbolicNames = []string{
		"", "INT", "FLOAT", "BOOL", "STR", "TRU", "FAL", "PRINT", "IF", "ELSE",
		"WHILE", "FOR", "SWITCH", "CASE", "DEFAULT", "IN", "VAR", "LET", "BREAK",
		"CONTINUE", "RETURN", "GUARD", "APPEND", "REMOVELAST", "REMOVE", "COUNT",
		"ISEMPTY", "FUNC", "STRUCT", "NUMBER", "STRING", "ID", "DIF", "IG_IG",
		"NOT", "OR", "AND", "IG", "MAY_IG", "MEN_IG", "MAYOR", "MENOR", "MUL",
		"DIV", "ADD", "SUB", "PARIZQ", "PARDER", "LLAVEIZQ", "LLAVEDER", "D_PTS",
		"CORIZQ", "CORDER", "COMA", "ARROW1", "PUNTO", "MODULO", "WHITESPACE",
		"COMMENT", "LINE_COMMENT",
	}
	staticData.RuleNames = []string{
		"INT", "FLOAT", "BOOL", "STR", "TRU", "FAL", "PRINT", "IF", "ELSE",
		"WHILE", "FOR", "SWITCH", "CASE", "DEFAULT", "IN", "VAR", "LET", "BREAK",
		"CONTINUE", "RETURN", "GUARD", "APPEND", "REMOVELAST", "REMOVE", "COUNT",
		"ISEMPTY", "FUNC", "STRUCT", "NUMBER", "STRING", "ID", "DIF", "IG_IG",
		"NOT", "OR", "AND", "IG", "MAY_IG", "MEN_IG", "MAYOR", "MENOR", "MUL",
		"DIV", "ADD", "SUB", "PARIZQ", "PARDER", "LLAVEIZQ", "LLAVEDER", "D_PTS",
		"CORIZQ", "CORDER", "COMA", "ARROW1", "PUNTO", "MODULO", "WHITESPACE",
		"COMMENT", "LINE_COMMENT", "ESC_SEQ",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 59, 409, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3,
		1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5,
		1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7,
		1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10,
		1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1,
		12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13,
		1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1,
		16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18,
		1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1,
		19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21,
		1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23,
		1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1,
		25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26,
		1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 4, 28, 290,
		8, 28, 11, 28, 12, 28, 291, 1, 28, 1, 28, 4, 28, 296, 8, 28, 11, 28, 12,
		28, 297, 3, 28, 300, 8, 28, 1, 29, 1, 29, 5, 29, 304, 8, 29, 10, 29, 12,
		29, 307, 9, 29, 1, 29, 1, 29, 1, 30, 1, 30, 5, 30, 313, 8, 30, 10, 30,
		12, 30, 316, 9, 30, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 33, 1,
		33, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37,
		1, 37, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1,
		42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47,
		1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1,
		52, 1, 53, 1, 53, 1, 53, 1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 4, 56, 376,
		8, 56, 11, 56, 12, 56, 377, 1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 57, 5,
		57, 386, 8, 57, 10, 57, 12, 57, 389, 9, 57, 1, 57, 1, 57, 1, 57, 1, 57,
		1, 57, 1, 58, 1, 58, 1, 58, 1, 58, 5, 58, 400, 8, 58, 10, 58, 12, 58, 403,
		9, 58, 1, 58, 1, 58, 1, 59, 1, 59, 1, 59, 1, 387, 0, 60, 1, 1, 3, 2, 5,
		3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25,
		13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43,
		22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61,
		31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79,
		40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97,
		49, 99, 50, 101, 51, 103, 52, 105, 53, 107, 54, 109, 55, 111, 56, 113,
		57, 115, 58, 117, 59, 119, 0, 1, 0, 7, 1, 0, 48, 57, 1, 0, 34, 34, 2, 0,
		65, 90, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 4, 0, 9, 10, 13,
		13, 32, 32, 92, 92, 2, 0, 10, 10, 13, 13, 7, 0, 32, 33, 35, 35, 43, 43,
		45, 46, 58, 58, 64, 64, 91, 93, 415, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0,
		0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0,
		0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0,
		0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0,
		0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1,
		0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43,
		1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0,
		51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0,
		0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0,
		0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0,
		0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1,
		0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89,
		1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0,
		97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0,
		0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111,
		1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0,
		1, 121, 1, 0, 0, 0, 3, 125, 1, 0, 0, 0, 5, 131, 1, 0, 0, 0, 7, 136, 1,
		0, 0, 0, 9, 143, 1, 0, 0, 0, 11, 148, 1, 0, 0, 0, 13, 154, 1, 0, 0, 0,
		15, 160, 1, 0, 0, 0, 17, 163, 1, 0, 0, 0, 19, 168, 1, 0, 0, 0, 21, 174,
		1, 0, 0, 0, 23, 178, 1, 0, 0, 0, 25, 185, 1, 0, 0, 0, 27, 190, 1, 0, 0,
		0, 29, 198, 1, 0, 0, 0, 31, 201, 1, 0, 0, 0, 33, 205, 1, 0, 0, 0, 35, 209,
		1, 0, 0, 0, 37, 215, 1, 0, 0, 0, 39, 224, 1, 0, 0, 0, 41, 231, 1, 0, 0,
		0, 43, 237, 1, 0, 0, 0, 45, 244, 1, 0, 0, 0, 47, 255, 1, 0, 0, 0, 49, 262,
		1, 0, 0, 0, 51, 268, 1, 0, 0, 0, 53, 276, 1, 0, 0, 0, 55, 281, 1, 0, 0,
		0, 57, 289, 1, 0, 0, 0, 59, 301, 1, 0, 0, 0, 61, 310, 1, 0, 0, 0, 63, 317,
		1, 0, 0, 0, 65, 320, 1, 0, 0, 0, 67, 323, 1, 0, 0, 0, 69, 325, 1, 0, 0,
		0, 71, 328, 1, 0, 0, 0, 73, 331, 1, 0, 0, 0, 75, 333, 1, 0, 0, 0, 77, 336,
		1, 0, 0, 0, 79, 339, 1, 0, 0, 0, 81, 341, 1, 0, 0, 0, 83, 343, 1, 0, 0,
		0, 85, 345, 1, 0, 0, 0, 87, 347, 1, 0, 0, 0, 89, 349, 1, 0, 0, 0, 91, 351,
		1, 0, 0, 0, 93, 353, 1, 0, 0, 0, 95, 355, 1, 0, 0, 0, 97, 357, 1, 0, 0,
		0, 99, 359, 1, 0, 0, 0, 101, 361, 1, 0, 0, 0, 103, 363, 1, 0, 0, 0, 105,
		365, 1, 0, 0, 0, 107, 367, 1, 0, 0, 0, 109, 370, 1, 0, 0, 0, 111, 372,
		1, 0, 0, 0, 113, 375, 1, 0, 0, 0, 115, 381, 1, 0, 0, 0, 117, 395, 1, 0,
		0, 0, 119, 406, 1, 0, 0, 0, 121, 122, 5, 73, 0, 0, 122, 123, 5, 110, 0,
		0, 123, 124, 5, 116, 0, 0, 124, 2, 1, 0, 0, 0, 125, 126, 5, 70, 0, 0, 126,
		127, 5, 108, 0, 0, 127, 128, 5, 111, 0, 0, 128, 129, 5, 97, 0, 0, 129,
		130, 5, 116, 0, 0, 130, 4, 1, 0, 0, 0, 131, 132, 5, 66, 0, 0, 132, 133,
		5, 111, 0, 0, 133, 134, 5, 111, 0, 0, 134, 135, 5, 108, 0, 0, 135, 6, 1,
		0, 0, 0, 136, 137, 5, 83, 0, 0, 137, 138, 5, 116, 0, 0, 138, 139, 5, 114,
		0, 0, 139, 140, 5, 105, 0, 0, 140, 141, 5, 110, 0, 0, 141, 142, 5, 103,
		0, 0, 142, 8, 1, 0, 0, 0, 143, 144, 5, 116, 0, 0, 144, 145, 5, 114, 0,
		0, 145, 146, 5, 117, 0, 0, 146, 147, 5, 101, 0, 0, 147, 10, 1, 0, 0, 0,
		148, 149, 5, 102, 0, 0, 149, 150, 5, 97, 0, 0, 150, 151, 5, 108, 0, 0,
		151, 152, 5, 115, 0, 0, 152, 153, 5, 101, 0, 0, 153, 12, 1, 0, 0, 0, 154,
		155, 5, 112, 0, 0, 155, 156, 5, 114, 0, 0, 156, 157, 5, 105, 0, 0, 157,
		158, 5, 110, 0, 0, 158, 159, 5, 116, 0, 0, 159, 14, 1, 0, 0, 0, 160, 161,
		5, 105, 0, 0, 161, 162, 5, 102, 0, 0, 162, 16, 1, 0, 0, 0, 163, 164, 5,
		101, 0, 0, 164, 165, 5, 108, 0, 0, 165, 166, 5, 115, 0, 0, 166, 167, 5,
		101, 0, 0, 167, 18, 1, 0, 0, 0, 168, 169, 5, 119, 0, 0, 169, 170, 5, 104,
		0, 0, 170, 171, 5, 105, 0, 0, 171, 172, 5, 108, 0, 0, 172, 173, 5, 101,
		0, 0, 173, 20, 1, 0, 0, 0, 174, 175, 5, 102, 0, 0, 175, 176, 5, 111, 0,
		0, 176, 177, 5, 114, 0, 0, 177, 22, 1, 0, 0, 0, 178, 179, 5, 115, 0, 0,
		179, 180, 5, 119, 0, 0, 180, 181, 5, 105, 0, 0, 181, 182, 5, 116, 0, 0,
		182, 183, 5, 99, 0, 0, 183, 184, 5, 104, 0, 0, 184, 24, 1, 0, 0, 0, 185,
		186, 5, 99, 0, 0, 186, 187, 5, 97, 0, 0, 187, 188, 5, 115, 0, 0, 188, 189,
		5, 101, 0, 0, 189, 26, 1, 0, 0, 0, 190, 191, 5, 100, 0, 0, 191, 192, 5,
		101, 0, 0, 192, 193, 5, 102, 0, 0, 193, 194, 5, 97, 0, 0, 194, 195, 5,
		117, 0, 0, 195, 196, 5, 108, 0, 0, 196, 197, 5, 116, 0, 0, 197, 28, 1,
		0, 0, 0, 198, 199, 5, 105, 0, 0, 199, 200, 5, 110, 0, 0, 200, 30, 1, 0,
		0, 0, 201, 202, 5, 118, 0, 0, 202, 203, 5, 97, 0, 0, 203, 204, 5, 114,
		0, 0, 204, 32, 1, 0, 0, 0, 205, 206, 5, 108, 0, 0, 206, 207, 5, 101, 0,
		0, 207, 208, 5, 116, 0, 0, 208, 34, 1, 0, 0, 0, 209, 210, 5, 98, 0, 0,
		210, 211, 5, 114, 0, 0, 211, 212, 5, 101, 0, 0, 212, 213, 5, 97, 0, 0,
		213, 214, 5, 107, 0, 0, 214, 36, 1, 0, 0, 0, 215, 216, 5, 99, 0, 0, 216,
		217, 5, 111, 0, 0, 217, 218, 5, 110, 0, 0, 218, 219, 5, 116, 0, 0, 219,
		220, 5, 105, 0, 0, 220, 221, 5, 110, 0, 0, 221, 222, 5, 117, 0, 0, 222,
		223, 5, 101, 0, 0, 223, 38, 1, 0, 0, 0, 224, 225, 5, 114, 0, 0, 225, 226,
		5, 101, 0, 0, 226, 227, 5, 116, 0, 0, 227, 228, 5, 117, 0, 0, 228, 229,
		5, 114, 0, 0, 229, 230, 5, 110, 0, 0, 230, 40, 1, 0, 0, 0, 231, 232, 5,
		103, 0, 0, 232, 233, 5, 117, 0, 0, 233, 234, 5, 97, 0, 0, 234, 235, 5,
		114, 0, 0, 235, 236, 5, 100, 0, 0, 236, 42, 1, 0, 0, 0, 237, 238, 5, 97,
		0, 0, 238, 239, 5, 112, 0, 0, 239, 240, 5, 112, 0, 0, 240, 241, 5, 101,
		0, 0, 241, 242, 5, 110, 0, 0, 242, 243, 5, 100, 0, 0, 243, 44, 1, 0, 0,
		0, 244, 245, 5, 114, 0, 0, 245, 246, 5, 101, 0, 0, 246, 247, 5, 109, 0,
		0, 247, 248, 5, 111, 0, 0, 248, 249, 5, 118, 0, 0, 249, 250, 5, 101, 0,
		0, 250, 251, 5, 76, 0, 0, 251, 252, 5, 97, 0, 0, 252, 253, 5, 115, 0, 0,
		253, 254, 5, 116, 0, 0, 254, 46, 1, 0, 0, 0, 255, 256, 5, 114, 0, 0, 256,
		257, 5, 101, 0, 0, 257, 258, 5, 109, 0, 0, 258, 259, 5, 111, 0, 0, 259,
		260, 5, 118, 0, 0, 260, 261, 5, 101, 0, 0, 261, 48, 1, 0, 0, 0, 262, 263,
		5, 99, 0, 0, 263, 264, 5, 111, 0, 0, 264, 265, 5, 117, 0, 0, 265, 266,
		5, 110, 0, 0, 266, 267, 5, 116, 0, 0, 267, 50, 1, 0, 0, 0, 268, 269, 5,
		73, 0, 0, 269, 270, 5, 115, 0, 0, 270, 271, 5, 69, 0, 0, 271, 272, 5, 109,
		0, 0, 272, 273, 5, 112, 0, 0, 273, 274, 5, 116, 0, 0, 274, 275, 5, 121,
		0, 0, 275, 52, 1, 0, 0, 0, 276, 277, 5, 102, 0, 0, 277, 278, 5, 117, 0,
		0, 278, 279, 5, 110, 0, 0, 279, 280, 5, 99, 0, 0, 280, 54, 1, 0, 0, 0,
		281, 282, 5, 115, 0, 0, 282, 283, 5, 116, 0, 0, 283, 284, 5, 114, 0, 0,
		284, 285, 5, 117, 0, 0, 285, 286, 5, 99, 0, 0, 286, 287, 5, 116, 0, 0,
		287, 56, 1, 0, 0, 0, 288, 290, 7, 0, 0, 0, 289, 288, 1, 0, 0, 0, 290, 291,
		1, 0, 0, 0, 291, 289, 1, 0, 0, 0, 291, 292, 1, 0, 0, 0, 292, 299, 1, 0,
		0, 0, 293, 295, 5, 46, 0, 0, 294, 296, 7, 0, 0, 0, 295, 294, 1, 0, 0, 0,
		296, 297, 1, 0, 0, 0, 297, 295, 1, 0, 0, 0, 297, 298, 1, 0, 0, 0, 298,
		300, 1, 0, 0, 0, 299, 293, 1, 0, 0, 0, 299, 300, 1, 0, 0, 0, 300, 58, 1,
		0, 0, 0, 301, 305, 5, 34, 0, 0, 302, 304, 8, 1, 0, 0, 303, 302, 1, 0, 0,
		0, 304, 307, 1, 0, 0, 0, 305, 303, 1, 0, 0, 0, 305, 306, 1, 0, 0, 0, 306,
		308, 1, 0, 0, 0, 307, 305, 1, 0, 0, 0, 308, 309, 5, 34, 0, 0, 309, 60,
		1, 0, 0, 0, 310, 314, 7, 2, 0, 0, 311, 313, 7, 3, 0, 0, 312, 311, 1, 0,
		0, 0, 313, 316, 1, 0, 0, 0, 314, 312, 1, 0, 0, 0, 314, 315, 1, 0, 0, 0,
		315, 62, 1, 0, 0, 0, 316, 314, 1, 0, 0, 0, 317, 318, 5, 33, 0, 0, 318,
		319, 5, 61, 0, 0, 319, 64, 1, 0, 0, 0, 320, 321, 5, 61, 0, 0, 321, 322,
		5, 61, 0, 0, 322, 66, 1, 0, 0, 0, 323, 324, 5, 33, 0, 0, 324, 68, 1, 0,
		0, 0, 325, 326, 5, 124, 0, 0, 326, 327, 5, 124, 0, 0, 327, 70, 1, 0, 0,
		0, 328, 329, 5, 38, 0, 0, 329, 330, 5, 38, 0, 0, 330, 72, 1, 0, 0, 0, 331,
		332, 5, 61, 0, 0, 332, 74, 1, 0, 0, 0, 333, 334, 5, 62, 0, 0, 334, 335,
		5, 61, 0, 0, 335, 76, 1, 0, 0, 0, 336, 337, 5, 60, 0, 0, 337, 338, 5, 61,
		0, 0, 338, 78, 1, 0, 0, 0, 339, 340, 5, 62, 0, 0, 340, 80, 1, 0, 0, 0,
		341, 342, 5, 60, 0, 0, 342, 82, 1, 0, 0, 0, 343, 344, 5, 42, 0, 0, 344,
		84, 1, 0, 0, 0, 345, 346, 5, 47, 0, 0, 346, 86, 1, 0, 0, 0, 347, 348, 5,
		43, 0, 0, 348, 88, 1, 0, 0, 0, 349, 350, 5, 45, 0, 0, 350, 90, 1, 0, 0,
		0, 351, 352, 5, 40, 0, 0, 352, 92, 1, 0, 0, 0, 353, 354, 5, 41, 0, 0, 354,
		94, 1, 0, 0, 0, 355, 356, 5, 123, 0, 0, 356, 96, 1, 0, 0, 0, 357, 358,
		5, 125, 0, 0, 358, 98, 1, 0, 0, 0, 359, 360, 5, 58, 0, 0, 360, 100, 1,
		0, 0, 0, 361, 362, 5, 91, 0, 0, 362, 102, 1, 0, 0, 0, 363, 364, 5, 93,
		0, 0, 364, 104, 1, 0, 0, 0, 365, 366, 5, 44, 0, 0, 366, 106, 1, 0, 0, 0,
		367, 368, 5, 45, 0, 0, 368, 369, 5, 62, 0, 0, 369, 108, 1, 0, 0, 0, 370,
		371, 5, 46, 0, 0, 371, 110, 1, 0, 0, 0, 372, 373, 5, 37, 0, 0, 373, 112,
		1, 0, 0, 0, 374, 376, 7, 4, 0, 0, 375, 374, 1, 0, 0, 0, 376, 377, 1, 0,
		0, 0, 377, 375, 1, 0, 0, 0, 377, 378, 1, 0, 0, 0, 378, 379, 1, 0, 0, 0,
		379, 380, 6, 56, 0, 0, 380, 114, 1, 0, 0, 0, 381, 382, 5, 47, 0, 0, 382,
		383, 5, 42, 0, 0, 383, 387, 1, 0, 0, 0, 384, 386, 9, 0, 0, 0, 385, 384,
		1, 0, 0, 0, 386, 389, 1, 0, 0, 0, 387, 388, 1, 0, 0, 0, 387, 385, 1, 0,
		0, 0, 388, 390, 1, 0, 0, 0, 389, 387, 1, 0, 0, 0, 390, 391, 5, 42, 0, 0,
		391, 392, 5, 47, 0, 0, 392, 393, 1, 0, 0, 0, 393, 394, 6, 57, 0, 0, 394,
		116, 1, 0, 0, 0, 395, 396, 5, 47, 0, 0, 396, 397, 5, 47, 0, 0, 397, 401,
		1, 0, 0, 0, 398, 400, 8, 5, 0, 0, 399, 398, 1, 0, 0, 0, 400, 403, 1, 0,
		0, 0, 401, 399, 1, 0, 0, 0, 401, 402, 1, 0, 0, 0, 402, 404, 1, 0, 0, 0,
		403, 401, 1, 0, 0, 0, 404, 405, 6, 58, 0, 0, 405, 118, 1, 0, 0, 0, 406,
		407, 5, 92, 0, 0, 407, 408, 7, 6, 0, 0, 408, 120, 1, 0, 0, 0, 9, 0, 291,
		297, 299, 305, 314, 377, 387, 401, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SwiftLexerInit initializes any static state used to implement SwiftLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSwiftLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SwiftLexerInit() {
	staticData := &SwiftLexerLexerStaticData
	staticData.once.Do(swiftlexerLexerInit)
}

// NewSwiftLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSwiftLexer(input antlr.CharStream) *SwiftLexer {
	SwiftLexerInit()
	l := new(SwiftLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &SwiftLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "SwiftLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SwiftLexer tokens.
const (
	SwiftLexerINT          = 1
	SwiftLexerFLOAT        = 2
	SwiftLexerBOOL         = 3
	SwiftLexerSTR          = 4
	SwiftLexerTRU          = 5
	SwiftLexerFAL          = 6
	SwiftLexerPRINT        = 7
	SwiftLexerIF           = 8
	SwiftLexerELSE         = 9
	SwiftLexerWHILE        = 10
	SwiftLexerFOR          = 11
	SwiftLexerSWITCH       = 12
	SwiftLexerCASE         = 13
	SwiftLexerDEFAULT      = 14
	SwiftLexerIN           = 15
	SwiftLexerVAR          = 16
	SwiftLexerLET          = 17
	SwiftLexerBREAK        = 18
	SwiftLexerCONTINUE     = 19
	SwiftLexerRETURN       = 20
	SwiftLexerGUARD        = 21
	SwiftLexerAPPEND       = 22
	SwiftLexerREMOVELAST   = 23
	SwiftLexerREMOVE       = 24
	SwiftLexerCOUNT        = 25
	SwiftLexerISEMPTY      = 26
	SwiftLexerFUNC         = 27
	SwiftLexerSTRUCT       = 28
	SwiftLexerNUMBER       = 29
	SwiftLexerSTRING       = 30
	SwiftLexerID           = 31
	SwiftLexerDIF          = 32
	SwiftLexerIG_IG        = 33
	SwiftLexerNOT          = 34
	SwiftLexerOR           = 35
	SwiftLexerAND          = 36
	SwiftLexerIG           = 37
	SwiftLexerMAY_IG       = 38
	SwiftLexerMEN_IG       = 39
	SwiftLexerMAYOR        = 40
	SwiftLexerMENOR        = 41
	SwiftLexerMUL          = 42
	SwiftLexerDIV          = 43
	SwiftLexerADD          = 44
	SwiftLexerSUB          = 45
	SwiftLexerPARIZQ       = 46
	SwiftLexerPARDER       = 47
	SwiftLexerLLAVEIZQ     = 48
	SwiftLexerLLAVEDER     = 49
	SwiftLexerD_PTS        = 50
	SwiftLexerCORIZQ       = 51
	SwiftLexerCORDER       = 52
	SwiftLexerCOMA         = 53
	SwiftLexerARROW1       = 54
	SwiftLexerPUNTO        = 55
	SwiftLexerMODULO       = 56
	SwiftLexerWHITESPACE   = 57
	SwiftLexerCOMMENT      = 58
	SwiftLexerLINE_COMMENT = 59
)
